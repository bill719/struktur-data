#include <iostrem>
#define sSIZE 5

using napespace std;
      
class quene 
private;
     int items [SIZE], front, rear;

     public;
        quene();
           front = -1;
              rear = -1;
              

            bool isFull(); {
                return rear == SIZE -1;
            }

            bool isEmpty()  {
                return front == -1 || front > rear;
            }

            void enqueue(int element) {
                if (isFull()) {
                    cout << 
                    "queue full/n";
                    return;
                }
            
            }
           if (isEmpty()) {
                front = 0;
           }
           rear++;
           items[rear] = element;
        cout << element << " go into the queue.\n"; {}   

    void dequeue() {}
            if(isEmpty()) {
                }
                cout << items[] << " removed from th queue.\n";
                front++;
    void display() 
                if (isEmpty()) 
                    count<< "queue is empty.\n";
                    return;

                cout << "queue elements are:"
                for (int i = front; i <=
                rear; i++) {
                    cout << items[i] << " ";

                }
                cout << endl;

            
            {

            };

            int main{
                queue q;
                q.enqueue(25);
                q.enqueue(15);
                q.enqueue(20);
                q.display();
                q.dequeue();
                q.display();

                return 0;
                
            }
            
    
            
                
            